{"version":3,"sources":["components/Nav.js","components/GameZone.js","components/App.js","index.js"],"names":["Nav","className","id","Component","GameZone","state","Characters","active","message","score","highestScore","arrCharacterClicked","play","characterId","setState","getCharactersId","filter","getCharacterId","item","idExist","length","push","document","getElementById","HighestScore","innerHTML","this","characters","map","character","onClick","src","image","alt","array","i","j","Math","floor","random","temp","shuffleArray","App","ReactDOM","render"],"mappings":"sOAiCeA,E,iLAxBX,OACE,6BACA,yBAAKC,UAAU,eACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,4CAEF,yBAAKA,UAAU,OACb,uBAAGC,GAAG,aAGR,yBAAKD,UAAU,OACb,sCAAY,0BAAOC,GAAG,UAAtB,iBAAmD,0BAAOA,GAAG,2B,GApBxDC,a,OC4IJC,E,2MA1IbC,MAAQ,CACNC,aACAC,QAAQ,EACRC,QAAS,aACTC,MAAO,EACPC,aAAc,EACdC,oBAAqB,I,EAKvBC,KAAO,SAAAC,GAEL,EAAKC,SAAS,CACZL,MAAO,EAAKJ,MAAMI,MAAQ,IAI5B,IAAIM,EAAkBT,EAAWU,QAAO,SAAAC,GACtC,OAAOA,EAAef,KAAOW,KAGA,EAAKR,MAAMM,oBAAoBK,QAC5D,SAAAE,GACE,OAAOA,EAAKhB,KAAOW,KAIgBG,QAAO,SAAAG,GAC5C,OAAOA,EAAQjB,KAAOW,KAIZO,OAAS,GACnB,EAAKN,SAAS,CACZJ,aAAc,EAAKL,MAAMI,MACzBA,MAAO,EACPD,QAAS,WACTG,oBAAqB,KAGnB,EAAKN,MAAMI,MAAQ,EAAKJ,MAAMK,cAChC,EAAKI,SAAS,CACZJ,aAAc,EAAKL,MAAMK,iBAIzB,EAAKL,MAAMI,MAAQ,EAAKJ,MAAMK,aAChC,EAAKI,SAAS,CACZN,QAAS,qBACTE,aAAc,EAAKL,MAAMK,eAG3B,EAAKI,SAAS,CACZN,QAAS,uBACTE,aAAc,EAAKL,MAAMK,aAAe,IAO5C,EAAKL,MAAMM,oBAAoBU,KAAKN,EAAgB,M,oFAYxD,IAAIP,EAAUc,SAASC,eAAe,WAChCC,EAAeF,SAASC,eAAe,gBACvCd,EAAQa,SAASC,eAAe,SAEpCf,EAAQiB,UAAYC,KAAKrB,MAAMG,QAC/BgB,EAAaC,UAAYC,KAAKrB,MAAMK,aACpCD,EAAMgB,UAAYC,KAAKrB,MAAMI,Q,+BAGrB,IAAD,OAIHkB,EAAaD,KAAKrB,MAAMC,WAAWsB,KAAI,SAACC,GAE1C,OACE,yBACEC,QAAS,kBAAM,EAAKlB,KAAKiB,EAAU3B,KACnCD,UAAU,uBAEV,yBAAKA,UAAU,4BACb,yBACEC,GAAI2B,EAAU3B,GACd6B,IAAKF,EAAUG,MACf/B,UAAU,4BACVgC,IAAI,aAsBd,OACE,yBAAKhC,UAAU,kCACb,yBAAKA,UAAU,OAjBA,SAACiC,GAElB,IADA,IAAIC,EAAID,EAAMd,OAAS,EAChBe,EAAI,EAAGA,IAAK,CACjB,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IACpCK,EAAON,EAAMC,GACnBD,EAAMC,GAAKD,EAAME,GACjBF,EAAME,GAAKI,EAEb,OAAON,EASiBO,CAAad,O,0CAKvC,IAAInB,EAAUc,SAASC,eAAe,WAClCC,EAAeF,SAASC,eAAe,gBACvCd,EAAQa,SAASC,eAAe,SAEpCf,EAAQiB,UAAYC,KAAKrB,MAAMG,QAC/BgB,EAAaC,UAAYC,KAAKrB,MAAMK,aACpCD,EAAMgB,UAAYC,KAAKrB,MAAMI,U,GAvIVN,aCaRuC,EAZH,WACT,OACG,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFNC,IAASC,OAAO,kBAAC,EAAD,MAAStB,SAASC,eAAe,U","file":"static/js/main.cfe53b2f.chunk.js","sourcesContent":["import React, {Component}from 'react';\n\nclass  Nav extends Component {\n\n\n\n  \n  render(){\n\n    return (\n      <div>\n      <nav className=\" fixed-top \">\n        <div className=\"container-fluid nav-score\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <p>Remenber me?</p>\n            </div>\n            <div className=\"col\">\n              <p id=\"message\"></p>\n            </div>\n            \n            <div className=\"col\">\n              <p > Score: <span  id=\"score\"></span> | Top Score: <span  id=\"highestScore\"></span></p>\n            </div>\n          </div>\n        </div>\n        </nav>\n      </div>\n    );\n  }\n }\n\n\nexport default Nav;","import React, { Component } from \"react\";\nimport Characters from \"./../data/Characters\";\n\nclass GameZone extends Component {\n  state = {\n    Characters,\n    active: true,\n    message: \"Good Luck!\",\n    score: 0,\n    highestScore: 0,\n    arrCharacterClicked: []\n  };\n  \n\n  \n  play = characterId => {\n\n    this.setState({\n      score: this.state.score + 1\n    });\n\n    //Filtering the object that was clicked from the Characters propery in the state object\n    let getCharactersId = Characters.filter(getCharacterId => {\n      return getCharacterId.id === characterId;\n    });\n    //Filtering the object that was clicked from the Characters propery in the state object\n    let checkArrCharacterClicked = this.state.arrCharacterClicked.filter(\n      item => {\n        return item.id === characterId;\n      }\n    );\n    //filtering the checkArrCharacterClicked variable\n    let checked = checkArrCharacterClicked.filter(idExist => {\n      return idExist.id === characterId;\n    });\n\n    //Checking if  OFJECT IS MORE THAN ONCE IN the checked variable\n    if (checked.length > 0) {\n      this.setState({\n        highestScore: this.state.score,\n        score: 0,\n        message: \"You Lost\",\n        arrCharacterClicked: []\n      });\n\n      if (this.state.score < this.state.highestScore) {\n        this.setState({\n          highestScore: this.state.highestScore\n        });\n      }\n    } else {\n      if (this.state.score < this.state.highestScore) {\n        this.setState({\n          message: \"Nice You Got this!\",\n          highestScore: this.state.highestScore\n        });\n      } else {\n        this.setState({\n          message: \"Nice You're Winning!\",\n          highestScore: this.state.highestScore + 1\n        });\n      }\n\n      // If the object id that was clicked is not in the arrCharacterClicked\n      //Then  This push the getCharactersId variable into the arrCharacterClicked Array in the state object\n\n      this.state.arrCharacterClicked.push(getCharactersId[0]);\n    }\n\n    // //filtering the arrCharacterClicked propery in the state object\n    //     let clicked = this.state.arrCharacterClicked.filter((characterClicked) =>{\n    // return characterClicked.id == characterId\n    //     }).length >= 1;\n\n    // console.log(clicked)\n  };\n\n  componentDidUpdate() {\n  let message = document.getElementById(\"message\");\n    let HighestScore = document.getElementById(\"highestScore\");\n    let score = document.getElementById(\"score\");\n\n    message.innerHTML = this.state.message;\n    HighestScore.innerHTML = this.state.highestScore;\n    score.innerHTML = this.state.score;\n  }\n\n  render() {\n    \n  \n\n    let characters = this.state.Characters.map((character)=> {\n\n      return (\n        <div\n          onClick={() => this.play(character.id)}\n          className=\"character-card  col\"\n        >\n          <div className=\"card  bg-dark text-white\">\n            <img\n              id={character.id}\n              src={character.image}\n              className=\" character-image card-img\"\n              alt=\"...\"\n            ></img>\n          </div>\n        </div>\n      );\n    });\n\n    let shuffleArray = (array) => {\n      let i = array.length - 1;\n      for (; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n      return array;\n    }\n  \n         \n\n          \n\n    return (\n      <div className=\"container-fluid card-container\">\n        <div className=\"row\">{shuffleArray(characters)}</div>\n      </div>\n    );\n  }\n  componentDidMount() {\n    let message = document.getElementById(\"message\");\n    let HighestScore = document.getElementById(\"highestScore\");\n    let score = document.getElementById(\"score\");\n\n    message.innerHTML = this.state.message;\n    HighestScore.innerHTML = this.state.highestScore;\n    score.innerHTML = this.state.score;\n  }\n}\n\nexport default GameZone;\n","import React from 'react';\nimport Nav from './Nav';\nimport GameZone from './GameZone';\n\nconst App = () =>{\n   return(\n      <div>\n      <Nav />\n      <GameZone />\n      \n      </div>\n\n    \n   )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/style.css';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}